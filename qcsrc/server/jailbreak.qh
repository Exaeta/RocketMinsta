
float g_jailbreak_claim;
typedef void() jb_torture_logic;

void JB_Init();
entity JB_ChooseJailSpawnpoint(float);
float JB_GetEnemyTeamOf(float);
void JB_CountPlayers();
void JB_EndRound();
void JB_Frame();
float JB_TotalPlayersOnTeam(float);
void JB_PlayerPreThink();
void JB_ActivateCamera(float, float);
void JB_TorturePrisoners(float);
void JB_TorturePrisonersLater(float, float);
void JB_Torture_Register(jb_torture_logic);
void JB_Torture_RegisterAll();
void JB_Torture_Start(entity);
void JB_SetCamera(entity, entity, float);
void JB_ClearCamera(entity);
void JB_ClearCameraForAll();
void JB_HandleProjectile(entity);
void JB_ControlPoint_Activate(entity);
void JB_ControlPoint_Deactivate(entity, float);
void JB_ControlPoint_UpdateCooldownProgress(entity);
string JB_ControlPoint_Name(entity);

float JB_PlayerDies();
void JB_PlayerSpawn();
void JB_RemovePlayer();

.float jb_unlock_progress;
.float jb_isprisoned;
.float jb_jail_lasttouch;
.float jb_prisontime;
.float jb_cooldown;
.float jb_cooldown_max;
.float jb_active;
.float jb_capturecount;
.float jb_roundlost;
.float jb_fragrow;
.float jb_proj_ownerstate;
.float jb_team_initial;
.float jb_defendthink_next;
.float jb_message;

.entity jb_prisonedby;
.entity jb_prisoned_by;
.entity jb_saviour;
.entity jb_waypoint;
.entity jb_waypoint_defend;
.entity jb_capturingplayer;

float jb_totalred, jb_totalblue;
float jb_roundover;

entity jb_activecamera;
entity jb_cp_first;
entity jb_cp_last;
.entity jb_cp_next;

.float jb_torture_force;
.float jb_torture_force_jitter;
.float jb_torture_delay;
.float jb_torture_delay_jitter;
.float jb_torture_suggestedforce;

#define JB_GAME_ACTIVE (warmup < time && !jb_roundover)

#define JB_PROJ_OWNERSTATE_UNDEFINED 0
#define JB_PROJ_OWNERSTATE_IMPRISONED 1
#define JB_PROJ_OWNERSTATE_FREE 2

#define JB_TEAM_NEUTRAL COLOR_TEAM3

#define FOR_EACH_JB_CONTROLPOINT(e) for(e = jb_cp_first; e; e = e.jb_cp_next)
